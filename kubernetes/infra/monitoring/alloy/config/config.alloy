logging {
  level  = "info"
  format = "logfmt"
}

import.git "ksm" {
  repository = "https://github.com/grafana/alloy-modules.git"
  revision = "main"
  path = "modules/kubernetes/kube-state-metrics/metrics.alloy"
  pull_frequency = "15m"
}

loki.write "default" {
  endpoint {
    url = "http://loki-gateway/loki/api/v1/push"
    tenant_id = 1
  }
}

prometheus.remote_write "default" {
    endpoint {
      url = "http://mimir-nginx/api/v1/push"
    }
}

discovery.kubernetes "pods" {
  role = "pod"
}

discovery.kubernetes "service" {
  role = "service"
}

discovery.kubernetes "node" {
  role = "node"
}

prometheus.exporter.unix "unix" {

}

ksm.kubernetes "ksm" {

}

prometheus.scrape "pods" {
  targets    = discovery.kubernetes.pods.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.scrape "service" {
  targets    = discovery.kubernetes.service.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.scrape "node" {
  targets    = discovery.kubernetes.node.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.scrape "unix" {
  targets    = prometheus.exporter.unix.unix.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

ksm.scrape "ksm" {
  targets    = ksm.kubernetes.ksm.output
  forward_to = [prometheus.remote_write.default.receiver]
}

discovery.relabel "pods" {
  targets = discovery.kubernetes.pods.targets

  rule {
    source_labels = ["__meta_kubernetes_namespace"]
    target_label  = "namespace"
  }

  rule {
    source_labels = ["__meta_kubernetes_pod_name"]
    target_label  = "pod"
  }

  rule {
    source_labels = ["__meta_kubernetes_pod_container_name"]
    target_label  = "container"
  }

  rule {
    source_labels = ["__meta_kubernetes_node_name"]
    target_label  = "node_name"
  }

  rule {
    source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
    target_label  = "__path__"
    replacement   = "/var/log/pods/*$1/*.log"
  }

  rule {
    source_labels = ["__meta_kubernetes_pod_label_app"]
    action        = "replace"
    target_label  = "app"
    regex         = "(.+)"
    replacement   = "$1"
  }

  rule {
    action = "labeldrop"
    regex  = "__meta_kubernetes_pod_label_app"
  }
}

loki.source.kubernetes "pods" {
  targets    = discovery.relabel.pods.output
  forward_to = [loki.write.default.receiver]
}
