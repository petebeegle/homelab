# This playbook is used to provision a Talos cluster using the provision-cluster role.
---
- name: Get existing Proxmox state
  hosts: localhost
  connection: local
  tasks:
    - name: Query Terraform output
      ansible.builtin.shell: terraform -chdir lookup('ansible.builtin.env', 'WORKSPACE_FOLDER') }}/terraform output -json
      register: terraform_output
    - name: Set provision_talos_cluster_terraform_output fact
      ansible.builtin.set_fact:
        provision_talos_cluster_terraform_output: "{{ terraform_output.stdout }}"
- name: Stop existing VMs
  hosts: proxmox
  become_user: root
  become: true
  become_method: ansible.builtin.su
  become_flags: "-"
  tasks:
    - name: Stop VMs
      ansible.builtin.shell: |
        qm stop {{ item.split('/')[2] }}
      loop: "{{ hostvars['localhost']['provision_talos_cluster_terraform_output'].values() | map(attribute='value') | flatten | map(attribute='id') }}"
- name: Configure Nodes
  hosts: localhost
  connection: local
  become: true
  roles:
    - role: provision_cluster
      vars:
        provision_cluster_operation: apply
        provision_cluster_image_name: "{{ talos.image_src }}{{ talos.image_name }}"
        provision_cluster_proxmox_token_id: "{{ proxmox.token_id }}"
        provision_cluster_proxmox_token_secret: "{{ proxmox.token_secret }}"
        provision_cluster_proxmox_api_url: "{{ proxmox.api_url }}"
        provision_cluster_ssh_proxmox_private_key: "{{ ssh.proxmox_private_key }}"
        provision_cluster_networking_gateway_ip: "{{ networking.gateway_ip }}"
        provision_cluster_ips: "{{ groups.k8s }}"
